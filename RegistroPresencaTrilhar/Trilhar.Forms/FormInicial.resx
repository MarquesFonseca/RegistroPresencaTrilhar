<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAAEAIACICQAAJgAAACAgAAABACAAqBAAAK4JAAAoAAAAGAAAADAAAAABACAAAAAAAAAJ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/PwA8PDsAOTk5AISHiwAAAAAAPj4/AEFE
        RQBASk0APD0+AEdORwAAAAAAPT4+AD08PQA/QUMAPB8PAjQZBgE5KBkAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADo2OQA3NDcCNzQ3GUJBQkdKSklsQEA9LkFCQENBRERGPjo6HT9AP0JBRUJ0Ozs6MDw7
        OSpAQUEvQElJfEZLSzNIXF0Aeba5AGKboAAAAAAAAAAAAAAAAAAAAAAAVGlRAEhNSQBHSUgPSVNLsGdq
        Z795eX3qUFBo3UJOXNNBVmHPRFdZt0xhUN5VbVfmXmFf109QXsxCT1zeP1tp80Jib4hamp4LOHmAAGKK
        jABWgoUAAAAAAAAAAAAAAAAALlczAFN0VwBQcFFFW3lf7oWLh/1zc5X/QkiH/zhWcf07aHj/QHJx/k9/
        W/9ph27/d3mH/0dLgv03VXH/PG6B/zt8hvVBiI+9SoaNQzmTnwB7aGIAAAAAAAAAAAAAAAAAPFs+ACo6
        JgVQfFSqao5w/5ibn/9XV5z/PEyO/zhfev87eIn/RYR5/1aOZf9/kIT/aWmV/z5JkP83YX3/NXaC/ziI
        kf8+lZ7/Q5GY1UuGjCNJh44AAAAAAAAAAAAAAAAATXJQAEtuThhbkmTYgqeL/6aotv9RVLP/Plmc/zpt
        iv9Blaj/TJuH/2Kfc/+cpqL/ZGWr/0NUpf82aH//N4eQ/zqbp/89pLD/QaOu/0aVnHU7oq0AAAAAAAAA
        AAAAAAAAYI1pAGCLaB9kpHHgi7iW/7O1yf9VWcj/QmCt/zx5mf9Cprz/TaqX/2utf/+vu7j/amvC/0ZX
        uP81dIj/NZyn/zGdq/8wl6T/PbO//0WirLNjh4gHAAAAAAAAAAAAAAAAZ5xyAGaZcBFornrNgr+S/8DJ
        0v9jZtX/R1/B/z17of9AqcL/S7Ot/2q0hf+5y8L/fH/R/0lXy/89gZv/Vaat/ziwu/8wvcz/M7XC/z2s
        uNBKnqEWoJ3dAEdI2wBdXdgAS03OADwKYgJpr3+Mcr6H/6vQuP6EitrtTlnX/0NzsPpAobn4RrnE/121
        k/utz7bxqq3f/09e1f98pMH/4eXl/4zKz/9YwMn/h8DF/0uwuto/s7keYmrbAE9P1wBeXdQeTEzNRkdI
        z25MW72GcLuDkXzCjX+Rm9E2VlvXeVBowVtHnbJPSbfEmVG0rGqiyqo42NnpcWp30o/E0eXr9/f2/9fk
        5f/O4uP/8O7t/5zKzdU9rLIaenvaAJOQygRXWeagS03o+js82fpDRdyvQ0PIdTQztyG70v8AUmL/AEFj
        tgBBdcEADSHWADphrACMsqgApKfXAP//7gf3+fq/+vv7/+/v8P/19vb/9/b2/9rk4sN8s7YOc3nfAHJ4
        3hdRV+zXRkno/DMz2v9CRtipTFDl2EJD0WA4N8GMMS+4eTc5oQg6OrtLMjO1WTI0tkohIY4GKCacDDw8
        rhD///+i7+7v/9vl5v/z/Pv/9PPz/+zs6q7a29oEb3ncAG943SNQVuzmQkbatkFE3eBJTtiLUFXo10hM
        1o0+P9zwNzjY3EtPwiZESNjFOjzW/kRJ4fY0NsOBLi/AqTI0yH////xa4/T384bq9P/C+fz/6ejo/+jn
        54DZ2doAcHjeAHF63i1QVersRkvcp0tP6eBGS9VqTVLp0ExS3a08Pt/5OTvd2lddzi1ER9/QODne+19k
        5sxMUOL2MzXY/z1B2qvtwNAGeNXccDPG1PZp4+vp6Pj4nfr09B719PQAbnThAHF34TVPVOvvREndsElO
        6ulCRtJcTFHpyk9U4M08P+D+PEDf11Zb0CtER+LQNjfc91FVyWxZXebTNzvd/0BG3aolHzcHQ0VFcUhb
        XbpHhohSkP//A9nw8AD19PQAYmrjAG924kJOU+zxREndtUpP7vlARNnFQETf6EtR4u0+QeL/P0Pf1VVZ
        zCpIS+DQPD7X9URH299HS+LpPEHe/0FH4KtIRVATU1FRoVBOTZBMSUhxVWFgAHL//wD09fMAq63UC2Fl
        5qRJTu79RUnYzUlM3c9GSub+ODvb/0NI4/8+QuD/QUXi4UxPykVAQdrfLy7DvVRW5KRJTev9QEXh/0NH
        4rQ7LWAFaGNYFVdXVTZWVlRHV1hWAHFwcAAAAAAAh4vTE1VZ58pJT/H/R0vm8UJDxEpKS9N6RETTy0NH
        4fpBRuH/R0vr+0RI3tA5O976MzTV3URHzHVKTunrR0vi80NI49c4ObhLQUO9Gjk6hwAiJSMAi4aEAG9u
        bgAAAAAAISX/AFVa4nZJTuv9QUPTrDEwrRUAAL0AS0vHgEJF4PFESd/0SU3p8U1R6vBCRNzmREbg40VL
        5/1ITefrSk7ixUhN7f9DR975QUPQcUFE4AB7e3kAe3t4AAAAAAAAAAAATVHqAHBz5WxKT+j1ODrGO0VI
        0gCVnNYKSUvYwTk73/9GSt/WRUrfzVpd0VNWV9I7XV/YRlRX5adQU9yFUVTegk1Q5NhOUufiS03WVlJW
        5gB3esIAAAAAAAAAAAAAAAAAUFTmAGpu4mZITOLpNTfBKjw/wQD//+cCTEzRiEBB4fdQVODIRkvhyk9N
        ZjlhX1ZIYF1ZTWVhZFlhXl5IZGWQLWFkxyRqbc0ueHzPCnZ5zQB2ecIAAAAAAAAAAAAAAAAAU1bQAFte
        0R8/Q8FdKy6gCS0woQBYWtsAX2LbOkpN4d1gY9aUTFDUjlVSXytiYF49YV9fOl1cXz9cWVovXFlMC1JT
        qQBVWdcAcXXSAHR40gAAAAAAAAAAAAAAAAAAAAAAWVzlAGZq5gBDSOIAKi2pAC0vpwBwdNUAcHTWEk1P
        zFVYWbgTbXC3ClxbcQBGQT0AR0JCAFlOVABYU1EAW1hVAFhVUgCzssMAwL/YAMjI2QAAAAAAAAAAAAAA
        AAAAAAAAjpHBAIuOwACMj8AA3uHpAP///wBjaNgAZ23bAEZJ2wBdX8EAam6/AL3I/wBzdHQAe3p7AGls
        bwBlZmsAY2NoAHJzdwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAHAPAAAQDgAAAA4AAAAOAA
        AADgAAAA4AAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAADAAAA
        BwAAAAcAAAAPAAAADwAAAH8AKAAAACAAAABAAAAAAQAgAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wAvLy8AJyQqADIxMgA6OjkAPj8+AGlqZwBPT0wAPz06AEJC
        QAAAAAAA////ADc3OAA7OzwAWVhYAFZWVQBQUE4AT0xMADo9OwBBREEA////AFdYVAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAADs7OwA+Pj4AVllXADk5ODE7OzshVVRdAAAA
        AAA+OjUTQj87Cz9ERQA9RUAANzU4ITs6OywyRj4ATEtOAIyhxwBRaXQAPT88MEJFQTEAEBEAV1VPAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQEEAPz4/Azs7O08/Pz9GTU1NwlhY
        WJ9CQkJuQ0NEcEJGRrFCSUxyPj09PEFCQXdES0WjR09IvD4+PmpAQD9oPz4+eENHSWI/TVG+RVBSrWE+
        PQNcf4MAnNDPAHKprQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWW5WAEpOSwBIR0kOSlNMy1Zg
        WMZ+fn3eg4OJ81RTb/dGS2PbP1Nf6kJaZ9VEWl+7SltT91JwVOpZdVvqY2Zi6l9eZ99IS17pQVJg8z9e
        bvo/YHDgRm15QI7PzARFfoYAlZ6dAFuEiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxVzQAUm9UAFJt
        Uz5XeFvob3xx/ZOUlv5ubpP/Q0aM/zlNcv45XXL+PGh3/z1xd/9Ic1r/Vohe/2qEb/+BhIf/WluI/TxF
        eP02V27/PmqA/z15hv89gYnhRYmQp0+GjDM/iJAA/1dLAHaTlAAAAAAAAAAAAAAAAAAAAAAAAAAAAENf
        QgA9UzgJT3RQsFuHYv+EjYX/k5Wf/05Nkf9BR5X/NlRy/zlief85c4D/QH2A/0uAXP9ZjWj/e4l+/3p7
        j/9GRY//N0t8/zhifP82cYL/NnyF/zeEjP9Ajpb/RIqQz02ChiZMhIkAUoaMAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQ2ZFAEJjQy5VhVrqaJRz/6Gnof+Ji6X/SEmm/z9OmP83YH//OGeB/z+Km/9Fi4X/VJJl/2GQ
        cf+WnJn/a22X/0ZIpf87V4j/OGeA/zR1fv86i5T/Opah/0Cfqv9BmaL/R4yTkoFpaAJahIoAAAAAAAAA
        AAAAAAAAAAAAAAAAAABTflgAUnpWUV+ZaPt2pYT/uLy4/4WIsv9JTbv/QVij/zppi/88d5D/RKO2/0uc
        kf9ZoG3/dKCB/66ysv9maaf/SU64/z1ekv8zanz/OIaP/zqapf87oK3/Pqm1/z+ptP9Em6PfTIuPIkyN
        kQAAAAAAAAAAAAAAAAAAAAAAAAAAAGGUaQBhj2leZaZx/nuyiv/EycX/i43D/0tPyv9EXLL/O2+T/z6E
        oP9CrsT/Sqie/1yodP+Ar4//vMDB/2ttuf9MUcj/PmCb/zN1gf83mKT/N6a0/yuHk/8xlaH/PbTA/0Gm
        sPtOmJ5TR5qhAAAAAAAAAAAAAAAAAAAAAAAAAAAAZZ1yAGabcU1orXn6d7mK/8TRx/+fodH/TlLS/0ld
        w/88cJr/P4mn/0KwyP9IsbH/XK57/4K4lf/Hzcz/eXzI/05S1P9CYKz/NIWR/zObp/8vp7P/MK+9/zS0
        wv84vsv/PrC9/0egqHs6q7cAAAAAAAAAAAAAAAAAAAAAAGpttABno3cAaKJ2KWqxfeZwvIb/sNG5/7zA
        3f9WWtX/TlvV/z9vpf89iKn/QLDG/0W4w/9asYn/ebuR/8vWz/+Wm9T/T1PZ/0Zhwv9Hj5v/j7q+/26y
        tv8uvMr/MMDP/zKstv82r7z/QKy1kQvN9gAAAAAAi4zSAE1KwQBcWcUATUzBAElXpQBSZXQKa7KAn269
        hf+ExZf/wtbQ93d82e1QVt//SmbD/0B+p/hBp7z9Q7rN/1G2q/9puIj3t9K+88jM5P9iZ9r/SGbN/5q9
        yP/y7/D/3eXl/1e9xP9twcn/sM7Q/2Wyuf89srub//8AAAAAAAB1cNcAXlrLAF9cwAxPTcAlSEm2G0dI
        zY5OZqZrc76FrXC/hc2QxpxmiYrZOFVZ1phVYNGbSHenTUihtWdJt8XBSrW8uF6xkVGpyrFB6Onsj5aY
        36NcccvK1ODp/fT29f/v7/D/r9LT/9Xl5v/18O//wtna/1y0upSKhpgAAAAAAH551QCJg88HW1zfkk1Q
        4uVAQM7KRUjf+kJE1YtJVKI1TmmVLpRo8gBtccEAzczPAZF/zANCeKUAK4qrAF+1uQ9ZtLwNYLSAAKTI
        rwD///wB////AMHO3Djy9vfu+vv7//Lz9P/o6ur/8/X0//X19P/k6ej/nMfIf+bl4gAAAAAAaWvdAGtu
        3CxRVurqTFDy/zw74P83Od3/Q0bVlklL2cA+PsuJAAAAAi0ojxclHncNAAAAAEVGsgAAAAAAPFnQADVN
        zwAkJ68ANzR5AGNhtACdntQA+v37IPv9/eH8/f3/8fHx/+/v8P/6+/v/+vv7//Dw7v/Y395j7OzpAAAA
        AABeZOQAZ27iTk5U7vpKTev7NDTX+jY33f1FStCDT1Xq4URG3K9IRsRANzXCzjEvuLUwL6kgSEusCjk5
        uXwvL65oMjS0dSosqjcnKskAMS2RBSIinRvl5/IQ/v//x/T09f/P0NH/2/Lz//n+/P/19fX/7ezr+uzs
        6k3t7eoAx9LxAFVc5gBmbuBhTVLu/0NH3ME6PMy0QUXi+ExSzGVUWurhQkbbtFJV14M5O9z/Nzjb/Tk7
        w0pZYNAsRUna7jQ1zf1GTOX/Oz/S2ioqq0MoKLGBNTfHySwutCX///+I9/r8/8zt8/987fX/7P7//+Pj
        4//e3d3p9fX0LO/u7gDT3/wASEzqAGhw4XBMUe7/QUfYqFFV565GSubtTFHGSlNY691DSNy8UljfpTc4
        3f84Od/7PD7JTm534DtBRd71MzPa/09U7PtQVef+PEDU5C0vzfs7Ptz6NTjDRv///xOz6u6dWuPw/Sbm
        9/+j9Pr/9Pj5+PPz85Dx7u4G8fDwAKWwzgA3OfEAZ27ifUxR7v9CR9amTVPqyUVK5eBDScExTlLr0khM
        38lRWePENTfc/zs+4Po8QMtLanHhPEBC4fUzM93/TlLYnoCF4qJPVOv/MjTb/z1B4fpARcxNaH7RAEip
        rBlAlp/GNaOt7Vfe5bDO8/RV//j3DPLz8gDu7u4Ap7DEAAoL/wBobeSIS1Du/0BF1qVLUOvYRUnl3kFF
        vixPU+zNSk7f11FX5ds1ONz/PkLj+TtAykdrb+Y8QUTh9TQ13f83O82lc3jJSlVZ6fEzNtj/QEbj+jxB
        yUz//wAAQD4/dUtKSrdJT0+gU25tF8fMzwD09fQA8/T0APn39gAAAP8ACgf/AGZt5ZJKT+7/QEXXpkpQ
        7eVHTOv3Oj3HnkJF4OJJTuHrTVLn7Tg63f9BRuT5NTvDRWtt5DxGSuP1OTvW+kdK4/o8QMrBS0/n8Tc7
        1/9ESef6ODzHTFlUGwpSUFDKVFFRi0tLSrtJSEdQSEhHAJ3x7wAAAAAAAAAAAHV13QCOkNsmWmHmwkdN
        7/9ARNCnS0/l5kpO7P9FSef/NDbY/0NI3/5JTun+Ojzc/0RI5vs0OMNKc3bjSEFC3PssK7rSUlTgvEpN
        6v9HTOz/Oj7Y/0ZL6vw7PMxSAAD/AF9cW1BdWlolVFRSqVNTUVpSUlAAAAAAAAAAAAAAAAAAKSrzAHN2
        4IJPU+3/SU7x/0dL3+9BQsSnT1LbpUZK4/83ONf/PUHd/0VK6v85Pdj/R0vs/zY4yoNTV9ZxNzfb/yoo
        y99RU7o/WFnnqElN7f9BRdz/R0zr/zw9z2M1N8cARkZ+AFBMRQBeXVsiXVxaD11bWgAAAAAAAAAAAAAA
        AAAhJOkAY2fefEtQ7f9JT/H/Sk/u/zw/zoBdW8kaSUnJa0tL0rVCQ9XxR0zr/z9E2/9KTvD/RUjk8kVK
        4eo1N93/NTbZ/DU1wYVJTdiVSU7r/UZK2uVITu3/PUDQpjc3rk5FR7YsNjauAFpZVwBZWFcAWVhWAAAA
        AAAAAAAAAAAAAExRygBUWckkTVLn0UhO7v9DRtjgNzi5UEZIzwAkIMkAVFTBVEA/zctHTez+Q0ja80pO
        7vxKTur0S1Dv/zw91/VCQ+DyRErm/kVL6PtITOnxSEzatUpQ8f5DSOT7QETZ/EBCzZISGf8AYWO7AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAtbfYAL6/1A5hZenIRkvo/DY3vFgAAAAAbXKxALfDzAZXW9muNTTV/0JH
        5/pESdjWR0vm8k1PzoVaXeG4SUnNcFdY2W1PUuriTFHs/UlM3b9OU9yCTFDt/0tQ7P5LT+3/Q0XVkn6K
        /wBYWrQAAAAAAAAAAAAAAAAAAAAAAAAAAACrrdkAra7WFWFl6NRFSuj4NzjEPzY3wQCYnscAw8vEBVRW
        2q0yMtj/QkXl70hM3btHTOXzPT+4PZucoA11dGwHgIKDD2xrvj9jZM9kXl+/OGBky0BPUdioUVTWkFRX
        37pbXtJAY2bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKGm0wCrsM4NX2Llx0NH4O4xM7QsMDG0AKKp
        xgAAAJAAX1/LXD4+2fFGSOTlWFzfvEdM5/JBQZ9NWlhSVGBfXWBfXFtgYFtcaWNfWmBcWVVWZmVnKoqR
        vg2XmaULk5S4E/3/rgGwtbEAXF6oAAAAAAAAAAAAAAAAAAAAAAAAAAAAn6rbAAAALwBRVM1ZOT26eygq
        jwguMJkAn6fFAHd4zAB1dcgUUlXn1ERG3tFxddmgSU3Y1EFBjTBeXFhLY2FgS2FfXkVeXWBSXVtfR1xZ
        WTtbWFQSaGmCAIaJsQCHib4AmZy+AJmdvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgqdoAdXuvAODm
        /wA3MAAAKSybACkqnQAAAAAAiY/HAJigxQhYW9qaP0DIh4uPyiJdYL8zAABpAQAAAACPkpUCn6CiAWhw
        bwNgcXYBqMPtAFpYVgBYVlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABQU6QAU1alAFFUoABITKQAb3GrAAAAAADT3cQAAACSAGZlvg9HRaYMe33NAFdZwQASEH8Ae3xzAHJz
        dAB5d3gAZGdpAFxgYwBgYWUAVlZcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ6lyAAAAAIAZGPDAEdHrwBIR7gAgHy3AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8AAAP/AAAD/wAAAP4AAAB+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA8AAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAHAAAABwAAAAcAAAAfAAAAHwAA
        AB8AAAAfAAAAPwIAA/+CAAf//gf//w==
</value>
  </data>
</root>